{"version":3,"sources":["webpack:///./src/app/yesgenie/Pages/address-pages/addresses/addresses.module.ts","webpack:///./src/app/yesgenie/Pages/address-pages/addresses/addresses.page.html","webpack:///./src/app/yesgenie/Pages/address-pages/addresses/addresses.page.scss","webpack:///./src/app/yesgenie/Pages/address-pages/addresses/addresses.page.ts"],"names":[],"mappings":"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","file":"yesgenie-Pages-address-pages-addresses-addresses-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddressesPage } from './addresses.page';\n\n// For Translation Language\nimport { TranslateModule } from '@ngx-translate/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddressesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule\n  ],\n  declarations: [AddressesPage]\n})\nexport class AddressesPageModule { }\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button fill=\\\"clear\\\" routerLink=\\\"/multiple-shipping-address\\\">\\n        <ion-icon slot=\\\"icon-only\\\" src=\\\"assets/back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ecom-title\\\">Add Shipping Address</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"goToCartPage()\\\">\\n        <ion-icon name=\\\"cart\\\"></ion-icon>\\n        <ion-badge>{{services.cartTotalItems()}}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content (pinch)=\\\"pinchEvent($event)\\\" class=\\\"content\\\">\\n  <!-- For Shipping Address -->\\n  <!-- <p>\\n    {{'Shipping Address'| translate }}\\n  </p> -->\\n\\n  <form class=\\\"form\\\" [formGroup]=\\\"updatePro\\\">\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Address Location</ion-label>\\n      <ion-input formControlName=\\\"address_detail\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Name</ion-label>\\n      <ion-input  formControlName=\\\"shipping_first_name\\\" value={{responseDatainfo?.username}} type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n\\n    <!-- <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Last Name'|translate}}</ion-label>\\n      <ion-input formControlName=\\\"shipping_last_name\\\" value=\\\"\\\" type=\\\"text\\\" name=\\\"shipping_last_name\\\"></ion-input>\\n    </ion-item> -->\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input formControlName=\\\"shipping_email\\\" value={{responseDatainfo?.email}}  type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Phone Number</ion-label>\\n      <ion-input formControlName=\\\"shipping_phone_number\\\" value={{responseDatainfo?.phone_number}} type=\\\"Number\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Address 1</ion-label>\\n      <ion-input formControlName=\\\"shipping_address_1\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Address 2 (Optional)</ion-label>\\n      <ion-input formControlName=\\\"shipping_address_2\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Country'|translate}}</ion-label>\\n      <!-- <ion-input formControlName=\\\"shipping_country_id\\\" type=\\\"text\\\" name=\\\"shipping_country_id\\\" value=\\\"India\\\" readonly></ion-input> -->\\n      <ion-select formControlName=\\\"shipping_country_id\\\" class=\\\"seloption ionselectborder\\\">\\n        <ion-select-option value=\\\"India\\\">India</ion-select-option>\\n       </ion-select> \\n    </ion-item>\\n\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">{{'State'|translate}}</ion-label>\\n       <!-- <ion-input formControlName=\\\"shipping_state\\\" type=\\\"text\\\" value={{responseDatainfo?.shipping_state}} ></ion-input> -->\\n  \\n       <ion-select formControlName=\\\"shipping_state\\\"  class=\\\"seloption ionselectborder\\\">\\n         <ion-select-option value=\\\"delhi\\\">Delhi</ion-select-option>\\n         <ion-select-option value=\\\"haryana\\\">Haryana</ion-select-option>\\n         <ion-select-option value=\\\"UP\\\">Uttar Pradesh</ion-select-option>\\n       </ion-select> \\n          </ion-item>\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Place</ion-label>\\n      \\n       <ion-input formControlName=\\\"shipping_city\\\" type=\\\"text\\\"></ion-input>\\n\\n       </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Zip Code</ion-label>\\n      <ion-input formControlName=\\\"shipping_zip_code\\\" type=\\\"Number\\\" name=\\\"shipping_zip_code\\\"></ion-input>\\n    </ion-item>\\n  </form>\\n  <ion-button expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!updatePro.valid\\\" (click)=\\\"Addnewmultipleshippingaddress()\\\">\\n    Save Changes\\n  </ion-button>\\n\\n  <!-- For Billing Address -->\\n  <!-- <p>\\n    {{'Billing Address'| translate }}\\n  </p> -->\\n\\n  <!-- <form>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'First Name'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_firstname\\\" [(ngModel)]=\\\"shipping.first_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Last Name'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_lastname\\\" [(ngModel)]=\\\"shipping.last_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Compnay'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"company\\\" [(ngModel)]=\\\"shipping.company\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Address'|translate}} 1</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"shipping.address_1\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Address'|translate}} 2</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"address2\\\" [(ngModel)]=\\\"shipping.address_2\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Country'|translate}}</ion-label>\\n      <ion-select class=\\\"seloption ionselectborder\\\" (ionChange)=\\\"getallstate($event.detail.value)\\\">\\n        <ion-select-option value=\\\"101\\\">India</ion-select-option>\\n       </ion-select>\\n          </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'State'|translate}}</ion-label>\\n      <ion-select class=\\\"seloption ionselectborder\\\" (ionChange)=\\\"Citiesbystate($event.detail.value)\\\">\\n        <ion-select-option *ngFor=\\\"let item of responseData\\\" value={{item.id}}>{{item.name}}</ion-select-option>\\n       </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'City'|translate}}</ion-label>\\n      <ion-select class=\\\"seloption ionselectborder\\\">\\n        <ion-select-option *ngFor=\\\"let item of responseDataCity\\\" value={{item.id}}>{{item.name}}</ion-select-option>\\n       </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Post code'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_postcode\\\" [(ngModel)]=\\\"shipping.postcode\\\" required></ion-input>\\n    </ion-item>\\n  </form>\\n  <ion-button expand=\\\"full\\\">\\n    {{'Update Billing'|translate}}\\n  </ion-button> -->\\n</ion-content>\"","module.exports = \"ion-header ion-toolbar {\\n  --color:white; }\\n  ion-header ion-toolbar ion-icon {\\n    font-size: 22px; }\\n  ion-header ion-toolbar ion-title ion-img {\\n    height: 25px; }\\n  ion-header ion-toolbar ion-buttons ion-icon {\\n    font-size: 22px; }\\n  ion-header ion-toolbar ion-buttons ion-badge {\\n    position: absolute;\\n    right: 3px;\\n    bottom: 14px; }\\n  ion-content p {\\n  font-size: 20px;\\n  text-align: center;\\n  margin-top: 16px !important;\\n  margin-bottom: 10px !important; }\\n  ion-content form ion-item ion-label {\\n  color: gray; }\\n  ion-content ion-button {\\n  --color: white;\\n  margin: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BcHBsZS9Eb2N1bWVudHMveWVzZ2VuaWUvc3JjL2FwcC95ZXNnZW5pZS9QYWdlcy9hZGRyZXNzLXBhZ2VzL2FkZHJlc3Nlcy9hZGRyZXNzZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBR1EsYUFBUSxFQUFBO0VBSGhCO0lBS1ksZUFBZSxFQUFBO0VBTDNCO0lBU2dCLFlBQVksRUFBQTtFQVQ1QjtJQWNnQixlQUFlLEVBQUE7RUFkL0I7SUFpQmdCLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsWUFBWSxFQUFBO0VBSzVCO0VBRVEsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQiwyQkFBMkI7RUFDM0IsOEJBQThCLEVBQUE7RUFMdEM7RUFVZ0IsV0FBVyxFQUFBO0VBVjNCO0VBZ0JRLGNBQVE7RUFDUixTQUFTLEVBQUEiLCJmaWxlIjoic3JjL2FwcC95ZXNnZW5pZS9QYWdlcy9hZGRyZXNzLXBhZ2VzL2FkZHJlc3Nlcy9hZGRyZXNzZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWhlYWRlcntcbiAgICBpb24tdG9vbGJhcntcbiAgICAgICAgLy8gLS1iYWNrZ3JvdW5kOmJsYWNrO1xuICAgICAgICAtLWNvbG9yOndoaXRlO1xuICAgICAgICBpb24taWNvbntcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICAgICAgfVxuICAgICAgICBpb24tdGl0bGV7XG4gICAgICAgICAgICBpb24taW1ne1xuICAgICAgICAgICAgICAgIGhlaWdodDogMjVweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpb24tYnV0dG9uc3tcbiAgICAgICAgICAgIGlvbi1pY29ue1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlvbi1iYWRnZXtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IDNweDtcbiAgICAgICAgICAgICAgICBib3R0b206IDE0cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5pb24tY29udGVudHtcbiAgICBwe1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLXRvcDogMTZweCAhaW1wb3J0YW50O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4ICFpbXBvcnRhbnQ7ICAgICAgIFxuICAgIH1cbiAgICBmb3Jte1xuICAgICAgICBpb24taXRlbXtcbiAgICAgICAgICAgIGlvbi1sYWJlbHtcbiAgICAgICAgICAgICAgICBjb2xvcjogZ3JheTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpb24tYnV0dG9ue1xuICAgICAgICAvLyAtLWJhY2tncm91bmQ6IGJsYWNrO1xuICAgICAgICAtLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n\nimport { ModalController, NavController, LoadingController, MenuController, ToastController } from '@ionic/angular';\nimport { SelectCountryPage } from '../../select-country/select-country.page';\nimport { SelectZonesPage } from '../../select-zones/select-zones.page';\nimport { SharedDataService } from '../../../providers/shared-data/shared-data.service';\nimport { ConfigService } from '../../../providers/config/config.service';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { YesServiceService } from 'src/app/yes-service.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-addresses',\n  templateUrl: './addresses.page.html',\n  styleUrls: ['./addresses.page.scss'],\n})\nexport class AddressesPage implements OnInit {\n\n\n  Id: any;\n  responseData: any;\n  responseDataCity: any;\n  userdata: any;\n  token: any;\n  responseDataAddress: any;\n  responseDatainfo: any;\n  updatePro: FormGroup;\n  shipping_state_user: any;\n\n\n  constructor(public loadingController: LoadingController, private router: Router, private route: ActivatedRoute, public services: YesServiceService, public nav:NavController, public menuCtrl: MenuController,\n    public shared: SharedDataService, public config: ConfigService, translate: TranslateService, public formBuilder: FormBuilder, private toastCtrl: ToastController,) {\n\n      // setTimeout(()=>{                    \n      //   this.ProUpdate();\n      // }, 500);\n\n\n    const userDetails = localStorage.getItem('userdata');\n\n    this.userdata = JSON.parse(userDetails);\n\n    this.token = this.userdata.token;\n\n    console.log(this.token);\n\n    this.Personalinfo();\n      \n     }\n\n\n  ngOnInit() {\n\n    this.ProUpdate();\n    \n  }\n\n\n\n  Personalinfo() {\n    const  userData = 'token=' + this.token;\n    console.log(userData);\n    this.services.Getpersonalinfo(userData).subscribe(result => {\n    this.responseDatainfo = result.response[0];\n    console.log(this.responseDatainfo);\n    this.shipping_state_user = this.responseDatainfo.shipping_state;\n    if (this.responseDatainfo.Status === 0) {\n    this.presentToast(this.responseDatainfo.Message);\n   } else {\n    //  console.log(this.responseData);\n    }\n  }, error => {\n\n  });\n  }\n\n  // async selectCountryPage(value) {\n  //   let modal = await this.modalCtrl.create({\n  //     component: SelectCountryPage\n  //   });\n  //   return await modal.present();\n  // }\n\n  // async selectZonePage(value) {\n  //   let modal = await this.modalCtrl.create({\n  //     component: SelectZonesPage\n  //   });\n  //   return await modal.present();\n  // }\n  goToCartPage() {\n    this.nav.navigateForward(\"bs-cart\");\n  }\n\n  async updateAddress() {\n    const loadingElement = await this.loadingController.create({\n      message: 'Please wait...',\n      spinner: 'crescent',\n      duration: 2000\n    });\n    return await loadingElement.present();\n  }\n\n\n  ionViewWillEnter() {\n\n  }\n\n  getallstate(state) {\n  \n    this.services.StateByCountry(state).subscribe(result => {\n    this.responseData = result.response;\n    if (this.responseData.Status === 0) {\n    } else {\n    console.log(this.responseData);\n    }\n    }, error => {\n    });\n    }\n\n\n\n\n    Citiesbystate(cit) {\n\n      this.services.Citiesbystate(cit).subscribe(result => {\n      this.responseDataCity = result.response;\n      if (this.responseDataCity.Status === 0) {\n      } else {\n      console.log(this.responseDataCity);\n      }\n      }, error => {\n      });\n      }\n\n\n\n\n\n      Addnewmultipleshippingaddress() {\n\n        const  userData = 'token=' + this.token + '&address_detail=' + this.updatePro.get('address_detail').value + '&shipping_first_name=' + this.updatePro.get('shipping_first_name').value + '&shipping_email=' + this.updatePro.get('shipping_email').value\n        + '&shipping_phone_number=' + this.updatePro.get('shipping_phone_number').value + '&shipping_address_1=' + this.updatePro.get('shipping_address_1').value + '&shipping_address_2=' + this.updatePro.get('shipping_address_2').value\n        + '&shipping_country_id=' + this.updatePro.get('shipping_country_id').value + '&shipping_state=' + this.updatePro.get('shipping_state').value + '&shipping_city=' + this.updatePro.get('shipping_city').value + '&shipping_zip_code=' + this.updatePro.get('shipping_zip_code').value;\n        \n        console.log(userData);\n        this.services.Addnewmultipleshippingaddress(userData).subscribe(result => {\n        this.responseDataAddress = result;\n        if (this.responseDataAddress === 0) {\n        this.presentToast(this.responseDataAddress);\n       } else {\n        console.log(this.responseDataAddress);\n        this.presentToast('Address Added Successfully');\n       // this.events.publish(\"updateSideMenu\");\n        this.nav.navigateForward(\"multiple-shipping-address\");    \n        }\n      }, error => {\n    \n      });\n      }\n\n\n\n      ProUpdate() {\n        this.updatePro = this.formBuilder.group({\n    \n          address_detail: ['', Validators.compose([Validators.required])],\n          shipping_first_name: ['', Validators.compose([Validators.required])],\n          shipping_email: ['', Validators.compose([Validators.required])],\n          shipping_phone_number: ['', Validators.compose([Validators.required])],\n          shipping_address_1: ['', Validators.compose([Validators.required])],\n          shipping_address_2: [''],\n          shipping_country_id: ['', Validators.compose([Validators.required])],\n          shipping_state: ['', Validators.compose([Validators.required])],\n          shipping_city: ['', Validators.compose([Validators.required])],\n          shipping_zip_code: ['', Validators.compose([Validators.required])],\n        });\n    }\n    \n      async presentToast(msg) {\n        const toast = await this.toastCtrl.create({\n          message: msg,\n          duration: 2000\n        });\n        toast.present();\n      }\n\n  \n}"],"sourceRoot":""}